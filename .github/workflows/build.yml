name: "Build: and push to docker.io and ghcr.io"
on:
  push:
    branches:
      - master

jobs:
  docker-io:
    name: build-alpine-latest
    runs-on: ubuntu-latest
    env:
      BUILD_ARCH: linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Prepare
        id: prepare
        run: |
          VERSION=edge

          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          fi
          if [ "${{ github.event_name }}" = "schedule" ]; then
            VERSION=nightly
          fi
          echo ::set-output name=version::${VERSION}

          TAGS="--tag ${GITHUB_REPOSITORY}:${VERSION} --tag ghcr.io/${GITHUB_REPOSITORY}:${VERSION}"
          if [[ $VERSION =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
            TAGS="$TAGS --tag ${GITHUB_REPOSITORY}:latest --tag ghcr.io/${GITHUB_REPOSITORY}:latest"
          fi
          echo ::set-output name=build_string::\
            --platform ${BUILD_ARCH} \
            --build-arg BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ') \
            --build-arg VCS_REF=${GITHUB_SHA::8} \
            ${TAGS} --file ./Dockerfile ./
      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:latest
          platforms: ${{ env.BUILD_ARCH }}
      - uses: docker/setup-buildx-action@v1
        id: buildx
        with:
          install: true
      - name: Docker Build
        run: docker build ${{ steps.setup.output.build_string }}
      - name: Docker Login and Push - Docker Prime
        if: success() && github.event_name != 'pull_request'
        env:
          DOCKER_USERNAME: ${{ github.actor }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_TOKEN_TRILOM }}
        run: |
          echo "${DOCKER_PASSWORD}" | docker login --username "${DOCKER_USERNAME}" --password-stdin
          docker push -a ${GITHUB_REPOSITORY}
      - name: Docker Login and Push - GHCR
        if: success() && github.event_name != 'pull_request'
        env:
          DOCKER_USERNAME: ${{ github.actor }}
          DOCKER_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "${DOCKER_PASSWORD}" | docker login ghcr.io --username "${DOCKER_USERNAME}" --password-stdin
          docker push -a ghcr.io/${GITHUB_REPOSITORY}
